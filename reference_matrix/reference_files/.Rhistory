install.packages("hexbin")
library("hexbin")
library(ggplot2)
axes = c(10, 100, 1000, 10000, 100000, 1000000)
reg = c(6.8928583307178033e-05, 0.00019713054913526764, 2.5161808477998817e-05, 2.2142561219101607e-06, 2.722476887154387e-07, 2.5318886273040515e-08)
fancy = c(0.01014104278759807, 0.00013040552288927742, 0.0002004316161136014, 0.00014607388605847939, 0.0001064069493310617, 4.1936694559745709e-05)
plot(axes, reg)
plot(axes, reg, type="l")
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites")
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites")
text(cex=1, x=x-.25, y=-1.25, labs, xpd=TRUE, srt=45)
x = plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites")
text(cex=1, x=x-.25, y=-1.25, labs, xpd=TRUE, srt=45)
x = plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites")
text(cex=1, x=x-.25, y=-1.25, xpd=TRUE, srt=45)
x
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", las=2)
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", las=2)
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", las=1)
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", las=4)
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", las=3)
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", col="blue")
lines(axes, fancy)
plot(axes, reg, type="lo", ylab="Mean Squared Error", xlab="Number of sites", col="blue")
plot(axes, reg, type="lo", ylab="Mean Squared Error", xlab="Number of sites", col="blue")
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", col="blue")
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", col="blue")
points(axes, reg)
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", col="blue")
points(axes, reg, col="blue")
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", col="blue", log="x")
points(axes, reg, col="blue")
points(axes, reg, col="blue", pch=16)
lines(axes, fancy, log="x")
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", col="blue", log="x")
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", col="blue", log="x")
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", col="blue", log="x")
points(axes, reg, col="blue", pch=16)
lines(axes, fancy, log="x")
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", col="blue", log="x", xlim=c(0, 0.0005))
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", col="blue", log="x", ylim=c(0, 0.0005))
points(axes, reg, col="blue", pch=16)
lines(axes, fancy, log="x")
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", col="blue", log="x", ylim=c(0, 0.01))
points(axes, reg, col="blue", pch=16)
lines(axes, fancy, log="x")
lines(axes, fancy, log="x", col="purple")
lines(axes, fancy, log="x", col="violet")
lines(axes, fancy, col="violet")
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", col="blue", log="x", ylim=c(0, 0.01))
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", col="blue", log="x", ylim=c(0, 0.01))
points(axes, reg, col="blue", pch=16)
lines(axes, fancy, col="violet")
lines(axes, fancy, col="green")
points(axes, fancy, col="green", pch=16)
lines(axes, fancy, col="black")
points(axes, fancy, col="black", pch=16)
reg = c(0.3097182795643747, 0.010139082819157375, 0.010091194840666916, 0.0099996843678815395, 0.0099653811051793849)
axes = c(10, 100, 1000, 10000, 100000)
reg = c(0.29512963473281545, 0.27841974058603258, 0.30123690685511845, 0.29718962399308846, 0.31995852308529588)
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", col="blue", log="x", ylim=c(0, 0.01))
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", col="blue", log="x")
points(axes, reg, col="blue", pch=16)
lines(axes, fancy, col="black")
fancy = c(0.3097182795643747, 0.010139082819157375, 0.010091194840666916, 0.0099996843678815395, 0.0099653811051793849)
reg = c(0.29512963473281545, 0.27841974058603258, 0.30123690685511845, 0.29718962399308846, 0.31995852308529588)
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", col="blue", log="x")
points(axes, reg, col="blue", pch=16)
lines(axes, fancy, col="black")
points(axes, fancy, col="black", pch=16)
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", col="blue", log="x", ylim=c(0,1))
points(axes, reg, col="blue", pch=16)
lines(axes, fancy, col="black")
points(axes, fancy, col="black", pch=16)
fancy = c(0.009906756054249781, 0.01015387877912933, 0.0099120544850252682, 0.0099093634407045866, 0.010012244897246803)
reg = c(0.29512963473281545, 0.27841974058603258, 0.30123690685511845, 0.29718962399308846, 0.31995852308529588)
plot(axes, reg, type="l", ylab="Mean Squared Error", xlab="Number of sites", col="blue", log="x", ylim=c(0,1))
points(axes, reg, col="blue", pch=16)
lines(axes, fancy, col="black")
points(axes, fancy, col="black", pch=16)
plot(n)
n = c(0.1723604659288071, 0.5092162108359479, 0.9192619172938433, 0.9913056380248052, 0.9991131920452341)
qp = c(0.13279807209978292, 0.49568256543353106, 0.9205698535682051, 0.991372434456825, 1)
plot(n)
site_range = c(10, 100, 1000, 10000, 100000)
n = c(0.1723604659288071, 0.5092162108359479, 0.9192619172938433, 0.9913056380248052, 0.9991131920452341)
qp = c(0.13279807209978292, 0.49568256543353106, 0.9205698535682051, 0.991372434456825, 1)
plot(n, site_range)
plot(site_range, n)
plot(site_range, n, log="x")
plot(site_range, n, log="x", type="l")
plot(site_range, n, log="x")
lines(site_range, n)
plot(site_range, n, log="x", pch=19)
lines(site_range, n)
lines(site_range, qp)
plot(site_range, qp)
points(site_range, qp)
plot(site_range, n, log="x", pch=19)
lines(site_range, n)
points(site_range, qp)
lines(site_range, qp)
plot(site_range, n, log="x", pch=19)
lines(site_range, n)
points(site_range, qp, pch=19)
lines(site_range, qp)
plot(site_range, n, log="x", pch=19, ylim=c(0,1))
lines(site_range, n)
points(site_range, qp, pch=19)
lines(site_range, qp)
plot(site_range, n, log="x", pch=19, ylim=c(0,1), col="blue")
lines(site_range, n, col="blue")
points(site_range, qp, pch=19, col="red")
lines(site_range, qp, col="red")
pdf("~/Desktop/bla.pdf")
plot(site_range, n, log="x", pch=19, ylim=c(0,1), col="blue")
lines(site_range, n, col="blue")
points(site_range, qp, pch=19, col="red")
lines(site_range, qp, col="red")
dev.off()
write.csv(ref_no_NA, "reference_no_NA.csv", row.names = F)
setwd("~/Documents/UCSF_year1/Zaitlen-rotation1/ALS_github/reference_matrix/reference_files/")
rm(list=ls())
ref_with_WGBS = read.csv("../../data/chip-wgbs-final.csv", header = T, na.strings=c("","NA"))
ref_no_NA = na.omit(ref_with_WGBS)
write.csv(ref_no_NA, "reference_no_NA.csv", row.names = F)
View(ref_no_NA)
View(ref_with_WGBS)
source("https://raw.githubusercontent.com/jbisanz/BMS270_2018/master/InstallTutorial.R")
require(vegan) #Diversity functions for microbiome data
require(dada2) #Our denoising and primary sequence processing tool
require(phyloseq) #plotting and analysis tools for microbiome data
require(MicrobeR) #plotting and functions for microbiome data
require(DESeq2) #differential expression/feature abundance tool
require(genefilter) #useful to help filter tables
require(tidyverse) #a whole gang of packages and functions for data wrangling and graphing
require(DECIPHER) #for nucleotide alignments
require(phangorn) #phylogenetic tree tools
require(ggtree) #tree plotting tools
source("https://raw.githubusercontent.com/jbisanz/BMS270_2018/master/InstallTutorial.R")
install.packages("sm")
remove.packages("sm")
install.packages("sm")
install.packages("tcltk")
install.packages("sm")
